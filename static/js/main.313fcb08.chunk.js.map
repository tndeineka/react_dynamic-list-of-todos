{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedTodo","setSelectedTodo","updatedTodos","filter","query","todo","lowerCaseTitle","title","toLowerCase","isActiveAndCompleted","Active","completed","isCompletedAndNotCompleted","Completed","includes","filteredTodos","className","map","currentTodo","todoIsSelect","id","classNames","type","onClick","TodoFilter","setFilter","setQuery","onChange","e","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","close","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","isLoading","setIsLoading","errorMessage","setErrorMessage","catch","finally","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.313fcb08.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (value: Todo) => void;\n  filter: string,\n  query: string,\n};\n\nfunction filteredTodos(\n  todos: Todo[],\n  filter: string,\n  query: string,\n): Todo[] {\n  return todos.filter(todo => {\n    const lowerCaseTitle = todo.title.toLowerCase();\n\n    const isActiveAndCompleted = filter === Status.Active\n      && todo.completed;\n    const isCompletedAndNotCompleted = filter === Status.Completed\n      && !todo.completed;\n\n    if (isActiveAndCompleted || isCompletedAndNotCompleted) {\n      return false;\n    }\n\n    return !(query\n      && !lowerCaseTitle.includes(query.toLowerCase()));\n  });\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo, filter, query,\n}) => {\n  const updatedTodos = filteredTodos(todos, filter, query);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {updatedTodos.map(currentTodo => {\n          const todoIsSelect = currentTodo.id === selectedTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={currentTodo.id}\n              className={classNames({\n                'has-background-info-light':\n                  todoIsSelect,\n              })}\n            >\n              <td className=\"is-vcentered\">{currentTodo.id}</td>\n              {currentTodo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n\n                <p\n                  className={currentTodo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                >\n                  {currentTodo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(currentTodo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye-slash': todoIsSelect,\n                      'far fa-eye': !todoIsSelect,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string;\n  setFilter: (filter: string) => void;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, setQuery, query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            title=\"Select your option\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"\n        control\n        is-expanded\n        has-icons-left\n        has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, close }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setErrorMessage('Todo not found'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  // const filterTodos = (filteredTodos: Todo[], status: Status, searchTodo: string): Todo[] => {\n  //   if (status === Status.all && !searchTodo.trim()) {\n  //     return filteredTodos;\n  //   }\n\n  //   return filteredTodos.filter(currentTodo => {\n  //     if (status === Status.active && currentTodo.completed) {\n  //       return false;\n  //     }\n\n  //     if (status === Status.completed && !currentTodo.completed) {\n  //       return false;\n  //     }\n\n  //     if (searchTodo.trim()\n  //       && !currentTodo.title.toLowerCase().includes(searchTodo.toLowerCase())\n  //     ) {\n  //       return false;\n  //     }\n\n  //     return true;\n  //   });\n  // };\n\n  // const visibleTodos = useMemo(() => {\n  //   return filterTodos(todos, filter, query);\n  // }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && todos.length > 0 ? (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                  filter={filter}\n                  query={query}\n                />\n              ) : (\n                <p>{errorMessage}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          close={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}